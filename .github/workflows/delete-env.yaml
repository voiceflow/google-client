name: PR-label -> clean-up dev env

on:
  pull_request:
    types: [closed]

jobs:
  preview:
    name: Clean up dev environment
    runs-on: ubuntu-latest
    continue-on-error: true # Ignore errors
    steps:
      - name: Check PR env labels
        uses: voiceflow/pr-label-match@master
        if: github.event.action == 'closed'
        with:
          regex: env-
        id: envNameLabel

      - name: Remove environment label
        uses: buildsville/add-remove-label@v1
        if: github.event.action == 'closed'
        with:
          token: ${{secrets.GH_SA_TOKEN}}
          label: ${{ steps.envNameLabel.outputs.label}}
          type: remove

      - name: Install vfcli
        if: github.event.action == 'closed' && steps.envNameLabel.outputs.label != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SA_TOKEN }}
        run: |
          API_URL="https://$GITHUB_TOKEN:@api.github.com/repos/voiceflow/vfcli"
          ASSET_ID=$(curl $API_URL/releases/latest | jq -r '.assets[3].id')
          curl -J -L -H "Accept: application/octet-stream" "$API_URL/releases/assets/$ASSET_ID" --output vfcli.tar.gz
          tar -xf vfcli.tar.gz

      - name: Delete the dev env if PR closed not creating and the label exists
        if: github.event.action == 'closed' && steps.envNameLabel.outputs.label != ''
        id: deleteEnv
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          echo "Initializating vfcli..."
          ./vfcli init --interactive false

          # Remove environmnet
          ENV_NAME=${{ steps.envNameLabel.outputs.label}}
          ENV_NAME=$(sed 's|env-||g' <<< $ENV_NAME)

          ./vfcli env delete -n ${ENV_NAME} --interactive false --no-telepresence
          echo -e "::set-output name=deleted::true"
          echo -e "::set-output name=envName::${ENV_NAME}"

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@master
        if: steps.deleteEnv.outputs.deleted == 'true'
        with:
          message: "Dev environment ${{ steps.deleteEnv.outputs.envName}} destroyed!"
          GITHUB_TOKEN: ${{ secrets.GH_SA_TOKEN }}
