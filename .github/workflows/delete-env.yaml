name: PR-label -> clean-up dev env

on:
  pull_request:
    types: [closed, unlabeled]

jobs:
  preview:
    name: Clean up dev environment
    runs-on: ubuntu-latest
    steps:
      - name: Install envcli
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SA_TOKEN }}
        run: |
          API_URL="https://$GITHUB_TOKEN:@api.github.com/repos/voiceflow/envcli"
          ASSET_ID=$(curl $API_URL/releases/latest | jq -r '.assets[2].id')
          curl -J -L -H "Accept: application/octet-stream" "$API_URL/releases/assets/$ASSET_ID" --output envcli.tar.gz
          tar -xf envcli.tar.gz
      - name: Get state
        id: getState
        env:
          ENVCLI_API_KEY: ${{ secrets.ENVCLI_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          PR_NUM=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          FILE_NAME=$(echo "${GITHUB_REPOSITORY}-${PR_NUM}.json" | sed 's:.*/::')
          aws s3 cp s3://com.voiceflow.ci.states/github-actions/dev-env/$FILE_NAME $FILE_NAME
          ENV_NAME=$( cat $FILE_NAME | jq '.env' )
          echo -e "::set-output name=envName::${ENV_NAME}"
          echo -e "::set-output name=fileName::${FILE_NAME}"
      - name: Check for existence of the specific env name label
        uses: Dreamcodeio/pr-has-label-action@master
        id: envLabel
        with:
          label: ${{ steps.getState.outputs.envName}}
      - name: Conditionally delete dev env
        if: steps.envLabel.outputs.hasLabel != true
        env:
          ENVCLI_API_KEY: ${{ secrets.ENVCLI_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          NON_INTERACTIVE=true ./envcli delete env -n ${{ steps.getState.outputs.envName}}
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@master
        if: steps.envLabel.outputs.hasLabel != true
        with:
          message: "Dev environment ${{ steps.getState.outputs.envName }} destroyed!"
          GITHUB_TOKEN: ${{ secrets.GH_SA_TOKEN }}
      - name: Delete S3 state file
        if: steps.envLabel.outputs.hasLabel != true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          aws s3 rm s3://com.voiceflow.ci.states/github-actions/dev-env/${{ steps.getState.outputs.fileName }}
