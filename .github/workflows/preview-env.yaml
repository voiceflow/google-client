name: PR-label -> preview dev env

on:
  pull_request:
    types: [opened, synchronize, labeled, edited]
  issue_comment:
    types: [created]

jobs:
  preview:
    name: Preview commit on env
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Check PR env labels
        uses: voiceflow/pr-label-match@master
        with:
          regex: "env-"
        id: envNameLabel
      - name: Check for new env request
        uses: Dreamcodeio/pr-has-label-action@master
        id: newEnvLabel
        with:
          label: new-env
      - name: Results
        run: |
          echo -e "multiple: ${{ steps.envNameLabel.outputs.multiple }}" 
          echo -e "label: ${{ steps.envNameLabel.outputs.label }}"
          echo -e "new env: ${{ steps.newEnvLabel.outputs.hasLabel }}"
      - name: Install envcli
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SA_TOKEN }}
        run: |
          API_URL="https://$GITHUB_TOKEN:@api.github.com/repos/voiceflow/envcli"
          ASSET_ID=$(curl $API_URL/releases/latest | jq -r '.assets[2].id')
          curl -J -L -H "Accept: application/octet-stream" "$API_URL/releases/assets/$ASSET_ID" --output envcli.tar.gz
          tar -xf envcli.tar.gz
      - name: conditionals
        env:
          ENVCLI_API_KEY: ${{ secrets.ENVCLI_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          GITHUB_TOKEN: ${{ secrets.GH_SA_TOKEN }}
        run: |
          if [[ "${{ steps.envNameLabel.outputs.label }}" == "" && "${{ steps.newEnvLabel.outputs.hasLabel }}" == "true" ]]; then
            echo "Creating new environment..."
          elif [[ "${{ steps.envNameLabel.outputs.multiple }}" == "true" ]]; then 
            echo "multiple env labels detected! No actions taken..."
          elif [[ "${{ steps.envNameLabel.outputs.multiple }}" == "false" && "${{ steps.envNameLabel.outputs.label }}" != "" ]]; then 
            echo "deploying to env ${{ steps.envNameLabel.outputs.label }}"
            NON_INTERACTIVE=true ./envcli preview -n ${{ steps.envNameLabel.outputs.label }}  
            PR_NUM=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
            echo "{}" | jq '. += {"env":"${{ steps.envNameLabel.outputs.label }}"}' > ${PR_NUM}.json
            aws s3 cp ${PR_NUM}.json s3://com.voiceflow.ci.states/github-actions/dev-env/${PR_NUM}.json
          else
            echo "no env-related labels detected! No actions taken..."
          fi
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v2
      #   env:
      #     ENVCLI_API_KEY: ${{ secrets.ENVCLI_API_KEY }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # - name: curl env API to create new env
      #   run: |
      #     curl something TODO
      # - name: Comment PR
      #   uses: thollander/actions-comment-pull-request@master
      #   with:
      #     message: 'Trigger a create/deploy action'
      #     GITHUB_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
